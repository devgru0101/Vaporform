version: '3.8'

services:
  # Backend service (Encore.ts)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key-change-in-production}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      # Encore manages its own database, no external DB needed
      - /var/run/docker.sock:/var/run/docker.sock  # For Encore's Docker database
    networks:
      - vaporform-network
    restart: unless-stopped
    # Encore handles its own database, no dependency needed

  # Frontend service (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:80"  # Nginx serves on port 80 inside container
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:4000
      - REACT_APP_WS_URL=ws://localhost:4000
    depends_on:
      - backend
    networks:
      - vaporform-network
    restart: unless-stopped

  # Database and cache managed by Encore automatically
  # No external PostgreSQL or Redis containers needed

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - vaporform-network
    restart: unless-stopped

  # Development tools container
  dev-tools:
    image: node:18-alpine
    working_dir: /workspace
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    command: tail -f /dev/null
    networks:
      - vaporform-network
    profiles:
      - dev

volumes:
  # Volumes managed by Encore and nginx

networks:
  vaporform-network:
    driver: bridge